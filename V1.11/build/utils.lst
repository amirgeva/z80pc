                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module utils
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _exit
                                     12 	.globl _multiply
                                     13 	.globl _error_exit
                                     14 	.globl _min
                                     15 	.globl _max
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area _DATA
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _INITIALIZED
                                     27 ;--------------------------------------------------------
                                     28 ; absolute external ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area _DABS (ABS)
                                     31 ;--------------------------------------------------------
                                     32 ; global & static initialisations
                                     33 ;--------------------------------------------------------
                                     34 	.area _HOME
                                     35 	.area _GSINIT
                                     36 	.area _GSFINAL
                                     37 	.area _GSINIT
                                     38 ;--------------------------------------------------------
                                     39 ; Home
                                     40 ;--------------------------------------------------------
                                     41 	.area _HOME
                                     42 	.area _HOME
                                     43 ;--------------------------------------------------------
                                     44 ; code
                                     45 ;--------------------------------------------------------
                                     46 	.area _CODE
                                     47 ;utils.c:5: word multiply(word a, word b)
                                     48 ;	---------------------------------
                                     49 ; Function multiply
                                     50 ; ---------------------------------
      000000                         51 _multiply::
      000000 4D               [ 4]   52 	ld	c, l
      000001 44               [ 4]   53 	ld	b, h
                                     54 ;utils.c:7: if (a == 0 || b == 0) return 0;
      000002 78               [ 4]   55 	ld	a, b
      000003 B1               [ 4]   56 	or	a, c
      000004 28 04            [12]   57 	jr	Z, 00101$
      000006 7A               [ 4]   58 	ld	a, d
      000007 B3               [ 4]   59 	or	a, e
      000008 20 04            [12]   60 	jr	NZ, 00102$
      00000A                         61 00101$:
      00000A 11 00 00         [10]   62 	ld	de, #0x0000
      00000D C9               [10]   63 	ret
      00000E                         64 00102$:
                                     65 ;utils.c:8: word res = 0;
      00000E 21 00 00         [10]   66 	ld	hl, #0x0000
                                     67 ;utils.c:9: while (b > 0)
      000011                         68 00106$:
      000011 7A               [ 4]   69 	ld	a, d
      000012 B3               [ 4]   70 	or	a, e
      000013 28 0F            [12]   71 	jr	Z, 00108$
                                     72 ;utils.c:11: if (b & 1) res += a;
      000015 CB 43            [ 8]   73 	bit	0, e
      000017 28 01            [12]   74 	jr	Z, 00105$
      000019 09               [11]   75 	add	hl, bc
      00001A                         76 00105$:
                                     77 ;utils.c:12: b = b >> 1;
      00001A CB 3A            [ 8]   78 	srl	d
      00001C CB 1B            [ 8]   79 	rr	e
                                     80 ;utils.c:13: a = a << 1;
      00001E CB 21            [ 8]   81 	sla	c
      000020 CB 10            [ 8]   82 	rl	b
      000022 18 ED            [12]   83 	jr	00106$
      000024                         84 00108$:
                                     85 ;utils.c:15: return res;
      000024 EB               [ 4]   86 	ex	de, hl
                                     87 ;utils.c:16: }
      000025 C9               [10]   88 	ret
                                     89 ;utils.c:18: void error_exit(word line, const char* msg, int rc)
                                     90 ;	---------------------------------
                                     91 ; Function error_exit
                                     92 ; ---------------------------------
      000026                         93 _error_exit::
                                     94 ;utils.c:27: exit(rc);
      000026 D1               [10]   95 	pop	de
      000027 E1               [10]   96 	pop	hl
      000028 E5               [11]   97 	push	hl
      000029 D5               [11]   98 	push	de
      00002A CDr00r00         [17]   99 	call	_exit
                                    100 ;utils.c:28: }
      00002D E1               [10]  101 	pop	hl
      00002E F1               [10]  102 	pop	af
      00002F E9               [ 4]  103 	jp	(hl)
                                    104 ;utils.c:30: word min(word a, word b)
                                    105 ;	---------------------------------
                                    106 ; Function min
                                    107 ; ---------------------------------
      000030                        108 _min::
      000030 4D               [ 4]  109 	ld	c, l
                                    110 ;utils.c:32: return a < b ? a : b;
      000031 79               [ 4]  111 	ld	a, c
      000032 93               [ 4]  112 	sub	a, e
      000033 7C               [ 4]  113 	ld	a, h
      000034 9A               [ 4]  114 	sbc	a, d
      000035 30 03            [12]  115 	jr	NC, 00103$
      000037 54               [ 4]  116 	ld	d, h
      000038 18 01            [12]  117 	jr	00104$
      00003A                        118 00103$:
      00003A 4B               [ 4]  119 	ld	c, e
      00003B                        120 00104$:
      00003B 59               [ 4]  121 	ld	e, c
                                    122 ;utils.c:33: }
      00003C C9               [10]  123 	ret
                                    124 ;utils.c:35: word max(word a, word b)
                                    125 ;	---------------------------------
                                    126 ; Function max
                                    127 ; ---------------------------------
      00003D                        128 _max::
      00003D 4D               [ 4]  129 	ld	c, l
                                    130 ;utils.c:37: return a > b ? a : b;
      00003E 7B               [ 4]  131 	ld	a, e
      00003F 91               [ 4]  132 	sub	a, c
      000040 7A               [ 4]  133 	ld	a, d
      000041 9C               [ 4]  134 	sbc	a, h
      000042 30 03            [12]  135 	jr	NC, 00103$
      000044 54               [ 4]  136 	ld	d, h
      000045 18 01            [12]  137 	jr	00104$
      000047                        138 00103$:
      000047 4B               [ 4]  139 	ld	c, e
      000048                        140 00104$:
      000048 59               [ 4]  141 	ld	e, c
                                    142 ;utils.c:38: }
      000049 C9               [10]  143 	ret
                                    144 	.area _CODE
                                    145 	.area _INITIALIZER
                                    146 	.area _CABS (ABS)
