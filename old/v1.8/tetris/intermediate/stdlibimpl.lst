                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stdlibimpl
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strcmp_impl
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area _DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area _INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _DABS (ABS)
                                     27 ;--------------------------------------------------------
                                     28 ; global & static initialisations
                                     29 ;--------------------------------------------------------
                                     30 	.area _HOME
                                     31 	.area _GSINIT
                                     32 	.area _GSFINAL
                                     33 	.area _GSINIT
                                     34 ;--------------------------------------------------------
                                     35 ; Home
                                     36 ;--------------------------------------------------------
                                     37 	.area _HOME
                                     38 	.area _HOME
                                     39 ;--------------------------------------------------------
                                     40 ; code
                                     41 ;--------------------------------------------------------
                                     42 	.area _CODE
                                     43 ;../stdlib/stdlibimpl.c:4: char strcmp_impl(const char* a, const char* b)
                                     44 ;	---------------------------------
                                     45 ; Function strcmp_impl
                                     46 ; ---------------------------------
      000000                         47 _strcmp_impl::
      000000 DD E5            [15]   48 	push	ix
      000002 DD 21 00 00      [14]   49 	ld	ix,#0
      000006 DD 39            [15]   50 	add	ix,sp
      000008 F5               [11]   51 	push	af
      000009 4D               [ 4]   52 	ld	c, l
      00000A 44               [ 4]   53 	ld	b, h
      00000B 33               [ 6]   54 	inc	sp
      00000C 33               [ 6]   55 	inc	sp
      00000D D5               [11]   56 	push	de
                                     57 ;../stdlib/stdlibimpl.c:6: if (!a && !b) return 0;
      00000E 78               [ 4]   58 	ld	a, b
      00000F B1               [ 4]   59 	or	a, c
      000010 20 0B            [12]   60 	jr	NZ, 00102$
      000012 DD 7E FF         [19]   61 	ld	a, -1 (ix)
      000015 DD B6 FE         [19]   62 	or	a, -2 (ix)
      000018 20 03            [12]   63 	jr	NZ, 00102$
      00001A AF               [ 4]   64 	xor	a, a
      00001B 18 45            [12]   65 	jr	00120$
      00001D                         66 00102$:
                                     67 ;../stdlib/stdlibimpl.c:7: if (!a) return 1;
      00001D 78               [ 4]   68 	ld	a, b
      00001E B1               [ 4]   69 	or	a, c
      00001F 20 04            [12]   70 	jr	NZ, 00105$
      000021 3E 01            [ 7]   71 	ld	a, #0x01
      000023 18 3D            [12]   72 	jr	00120$
      000025                         73 00105$:
                                     74 ;../stdlib/stdlibimpl.c:8: if (!b) return -1;
      000025 DD 7E FF         [19]   75 	ld	a, -1 (ix)
      000028 DD B6 FE         [19]   76 	or	a, -2 (ix)
      00002B 20 04            [12]   77 	jr	NZ, 00133$
      00002D 3E FF            [ 7]   78 	ld	a, #0xff
      00002F 18 31            [12]   79 	jr	00120$
                                     80 ;../stdlib/stdlibimpl.c:9: while (1)
      000031                         81 00133$:
      000031 E1               [10]   82 	pop	hl
      000032 E5               [11]   83 	push	hl
      000033                         84 00118$:
                                     85 ;../stdlib/stdlibimpl.c:11: if (*a==0 && *b==0) return 0;
      000033 0A               [ 7]   86 	ld	a, (bc)
      000034 B7               [ 4]   87 	or	a, a
      000035 20 08            [12]   88 	jr	NZ, 00109$
      000037 5E               [ 7]   89 	ld	e, (hl)
      000038 1C               [ 4]   90 	inc	e
      000039 1D               [ 4]   91 	dec	e
      00003A 20 03            [12]   92 	jr	NZ, 00109$
      00003C 7B               [ 4]   93 	ld	a, e
      00003D 18 23            [12]   94 	jr	00120$
      00003F                         95 00109$:
                                     96 ;../stdlib/stdlibimpl.c:12: if (*a==0) return 1;
      00003F B7               [ 4]   97 	or	a, a
      000040 20 04            [12]   98 	jr	NZ, 00112$
      000042 3E 01            [ 7]   99 	ld	a, #0x01
      000044 18 1C            [12]  100 	jr	00120$
      000046                        101 00112$:
                                    102 ;../stdlib/stdlibimpl.c:13: if (*b==0) return -1;
      000046 5E               [ 7]  103 	ld	e, (hl)
      000047 1C               [ 4]  104 	inc	e
      000048 1D               [ 4]  105 	dec	e
      000049 20 04            [12]  106 	jr	NZ, 00114$
      00004B 3E FF            [ 7]  107 	ld	a, #0xff
      00004D 18 13            [12]  108 	jr	00120$
      00004F                        109 00114$:
                                    110 ;../stdlib/stdlibimpl.c:14: if (*a==*b) 
      00004F BB               [ 4]  111 	cp	a, e
      000050 20 04            [12]  112 	jr	NZ, 00116$
                                    113 ;../stdlib/stdlibimpl.c:16: ++a;
                                    114 ;../stdlib/stdlibimpl.c:17: ++b;
      000052 23               [ 6]  115 	inc	hl
      000053 03               [ 6]  116 	inc	bc
                                    117 ;../stdlib/stdlibimpl.c:18: continue;
      000054 18 DD            [12]  118 	jr	00118$
      000056                        119 00116$:
                                    120 ;../stdlib/stdlibimpl.c:20: return *a<*b?-1:1;
      000056 93               [ 4]  121 	sub	a, e
      000057 30 05            [12]  122 	jr	NC, 00122$
      000059 01 FF FF         [10]  123 	ld	bc, #0xffff
      00005C 18 03            [12]  124 	jr	00123$
      00005E                        125 00122$:
      00005E 01 01 00         [10]  126 	ld	bc, #0x0001
      000061                        127 00123$:
      000061 79               [ 4]  128 	ld	a, c
      000062                        129 00120$:
                                    130 ;../stdlib/stdlibimpl.c:22: }
      000062 DD F9            [10]  131 	ld	sp, ix
      000064 DD E1            [14]  132 	pop	ix
      000066 C9               [10]  133 	ret
                                    134 	.area _CODE
                                    135 	.area _INITIALIZER
                                    136 	.area _CABS (ABS)
